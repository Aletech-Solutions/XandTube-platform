{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keyce\\\\XandNet Project\\\\XandTube\\\\frontend\\\\src\\\\components\\\\VideoGrid.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport VideoCard from './VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 20px;\n  padding: 20px 0;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 16px;\n    padding: 16px 0;\n  }\n`;\n_c = GridContainer;\nconst NoVideosMessage = styled.div`\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 60px 20px;\n  color: #aaa;\n`;\n_c2 = NoVideosMessage;\nconst NoVideosTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 12px;\n  color: #fff;\n`;\n_c3 = NoVideosTitle;\nconst NoVideosDescription = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n_c4 = NoVideosDescription;\nfunction VideoGrid({\n  videos,\n  loading,\n  error\n}) {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Carregando v\\xEDdeos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    console.error('Erro ao carregar vídeos:', error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Erro ao carregar v\\xEDdeos. Tente novamente mais tarde.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (!videos || videos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoVideosMessage, {\n      children: [/*#__PURE__*/_jsxDEV(NoVideosTitle, {\n        children: \"Nenhum v\\xEDdeo encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoVideosDescription, {\n        children: \"N\\xE3o h\\xE1 v\\xEDdeos dispon\\xEDveis no momento. Que tal fazer o upload do primeiro v\\xEDdeo?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(VideoCard, {\n      video: video\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c5 = VideoGrid;\nexport default VideoGrid;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"GridContainer\");\n$RefreshReg$(_c2, \"NoVideosMessage\");\n$RefreshReg$(_c3, \"NoVideosTitle\");\n$RefreshReg$(_c4, \"NoVideosDescription\");\n$RefreshReg$(_c5, \"VideoGrid\");","map":{"version":3,"names":["React","styled","VideoCard","jsxDEV","_jsxDEV","GridContainer","div","_c","NoVideosMessage","_c2","NoVideosTitle","h2","_c3","NoVideosDescription","p","_c4","VideoGrid","videos","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","console","length","map","video","id","_c5","$RefreshReg$"],"sources":["C:/Users/keyce/XandNet Project/XandTube/frontend/src/components/VideoGrid.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport VideoCard from './VideoCard';\r\n\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    gap: 16px;\r\n    padding: 16px 0;\r\n  }\r\n`;\r\n\r\nconst NoVideosMessage = styled.div`\r\n  grid-column: 1 / -1;\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  color: #aaa;\r\n`;\r\n\r\nconst NoVideosTitle = styled.h2`\r\n  font-size: 24px;\r\n  margin-bottom: 12px;\r\n  color: #fff;\r\n`;\r\n\r\nconst NoVideosDescription = styled.p`\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction VideoGrid({ videos, loading, error }) {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        Carregando vídeos...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    console.error('Erro ao carregar vídeos:', error);\r\n    return (\r\n      <div className=\"error-message\">\r\n        Erro ao carregar vídeos. Tente novamente mais tarde.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!videos || videos.length === 0) {\r\n    return (\r\n      <NoVideosMessage>\r\n        <NoVideosTitle>Nenhum vídeo encontrado</NoVideosTitle>\r\n        <NoVideosDescription>\r\n          Não há vídeos disponíveis no momento. \r\n          Que tal fazer o upload do primeiro vídeo?\r\n        </NoVideosDescription>\r\n      </NoVideosMessage>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GridContainer>\r\n      {videos.map((video) => (\r\n        <VideoCard key={video.id} video={video} />\r\n      ))}\r\n    </GridContainer>\r\n  );\r\n}\r\n\r\nexport default VideoGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,aAAa;AAanB,MAAMG,eAAe,GAAGP,MAAM,CAACK,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,eAAe;AAOrB,MAAME,aAAa,GAAGT,MAAM,CAACU,EAAE;AAC/B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,aAAa;AAMnB,MAAMG,mBAAmB,GAAGZ,MAAM,CAACa,CAAC;AACpC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,mBAAmB;AAOzB,SAASG,SAASA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC7C,IAAID,OAAO,EAAE;IACX,oBACEd,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAEzB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,IAAIN,KAAK,EAAE;IACTO,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,oBACEf,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,IAAI,CAACR,MAAM,IAAIA,MAAM,CAACU,MAAM,KAAK,CAAC,EAAE;IAClC,oBACEvB,OAAA,CAACI,eAAe;MAAAa,QAAA,gBACdjB,OAAA,CAACM,aAAa;QAAAW,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eACtDrB,OAAA,CAACS,mBAAmB;QAAAQ,QAAA,EAAC;MAGrB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEtB;EAEA,oBACErB,OAAA,CAACC,aAAa;IAAAgB,QAAA,EACXJ,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAChBzB,OAAA,CAACF,SAAS;MAAgB2B,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB;AAACM,GAAA,GArCQf,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAT,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}