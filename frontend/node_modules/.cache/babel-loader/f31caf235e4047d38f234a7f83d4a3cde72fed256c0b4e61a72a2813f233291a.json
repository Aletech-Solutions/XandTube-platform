{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Interceptor para logging de erros (usando console.log conforme preferência do usuário)\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('Erro na API:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Videos API\nexport const videosAPI = {\n  getAll: (params = {}) => api.get('/videos', {\n    params\n  }),\n  getById: id => api.get(`/videos/${id}`),\n  upload: formData => api.post('/videos', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  like: id => api.put(`/videos/${id}/like`),\n  dislike: id => api.put(`/videos/${id}/dislike`),\n  delete: id => api.delete(`/videos/${id}`)\n};\n\n// Channels API\nexport const channelsAPI = {\n  getAll: (params = {}) => api.get('/channels', {\n    params\n  }),\n  getById: id => api.get(`/channels/${id}`),\n  create: data => api.post('/channels', data),\n  update: (id, data) => api.put(`/channels/${id}`, data),\n  subscribe: id => api.put(`/channels/${id}/subscribe`),\n  unsubscribe: id => api.put(`/channels/${id}/unsubscribe`),\n  delete: id => api.delete(`/channels/${id}`)\n};\n\n// Comments API\nexport const commentsAPI = {\n  getByVideoId: (videoId, params = {}) => api.get(`/comments/${videoId}`, {\n    params\n  }),\n  create: data => api.post('/comments', data),\n  like: id => api.put(`/comments/${id}/like`),\n  dislike: id => api.put(`/comments/${id}/dislike`),\n  delete: id => api.delete(`/comments/${id}`)\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","response","use","error","_error$response","console","data","message","Promise","reject","videosAPI","getAll","params","get","getById","id","upload","formData","post","headers","like","put","dislike","delete","channelsAPI","update","subscribe","unsubscribe","commentsAPI","getByVideoId","videoId","healthCheck"],"sources":["C:/Users/keyce/XandNet Project/XandTube/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n});\r\n\r\n// Interceptor para logging de erros (usando console.log conforme preferência do usuário)\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('Erro na API:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Videos API\r\nexport const videosAPI = {\r\n  getAll: (params = {}) => api.get('/videos', { params }),\r\n  getById: (id) => api.get(`/videos/${id}`),\r\n  upload: (formData) => api.post('/videos', formData, {\r\n    headers: { 'Content-Type': 'multipart/form-data' }\r\n  }),\r\n  like: (id) => api.put(`/videos/${id}/like`),\r\n  dislike: (id) => api.put(`/videos/${id}/dislike`),\r\n  delete: (id) => api.delete(`/videos/${id}`)\r\n};\r\n\r\n// Channels API\r\nexport const channelsAPI = {\r\n  getAll: (params = {}) => api.get('/channels', { params }),\r\n  getById: (id) => api.get(`/channels/${id}`),\r\n  create: (data) => api.post('/channels', data),\r\n  update: (id, data) => api.put(`/channels/${id}`, data),\r\n  subscribe: (id) => api.put(`/channels/${id}/subscribe`),\r\n  unsubscribe: (id) => api.put(`/channels/${id}/unsubscribe`),\r\n  delete: (id) => api.delete(`/channels/${id}`)\r\n};\r\n\r\n// Comments API\r\nexport const commentsAPI = {\r\n  getByVideoId: (videoId, params = {}) => api.get(`/comments/${videoId}`, { params }),\r\n  create: (data) => api.post('/comments', data),\r\n  like: (id) => api.put(`/comments/${id}/like`),\r\n  dislike: (id) => api.put(`/comments/${id}/dislike`),\r\n  delete: (id) => api.delete(`/comments/${id}`)\r\n};\r\n\r\n// Health check\r\nexport const healthCheck = () => api.get('/health');\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACTC,OAAO,CAACF,KAAK,CAAC,cAAc,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,IAAI,KAAIH,KAAK,CAACI,OAAO,CAAC;EACpE,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG;EACvBC,MAAM,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKhB,GAAG,CAACiB,GAAG,CAAC,SAAS,EAAE;IAAED;EAAO,CAAC,CAAC;EACvDE,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;EACzCC,MAAM,EAAGC,QAAQ,IAAKrB,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAED,QAAQ,EAAE;IAClDE,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;EACFC,IAAI,EAAGL,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,WAAWN,EAAE,OAAO,CAAC;EAC3CO,OAAO,EAAGP,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,WAAWN,EAAE,UAAU,CAAC;EACjDQ,MAAM,EAAGR,EAAE,IAAKnB,GAAG,CAAC2B,MAAM,CAAC,WAAWR,EAAE,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMS,WAAW,GAAG;EACzBb,MAAM,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKhB,GAAG,CAACiB,GAAG,CAAC,WAAW,EAAE;IAAED;EAAO,CAAC,CAAC;EACzDE,OAAO,EAAGC,EAAE,IAAKnB,GAAG,CAACiB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3ClB,MAAM,EAAGS,IAAI,IAAKV,GAAG,CAACsB,IAAI,CAAC,WAAW,EAAEZ,IAAI,CAAC;EAC7CmB,MAAM,EAAEA,CAACV,EAAE,EAAET,IAAI,KAAKV,GAAG,CAACyB,GAAG,CAAC,aAAaN,EAAE,EAAE,EAAET,IAAI,CAAC;EACtDoB,SAAS,EAAGX,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,aAAaN,EAAE,YAAY,CAAC;EACvDY,WAAW,EAAGZ,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,aAAaN,EAAE,cAAc,CAAC;EAC3DQ,MAAM,EAAGR,EAAE,IAAKnB,GAAG,CAAC2B,MAAM,CAAC,aAAaR,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG;EACzBC,YAAY,EAAEA,CAACC,OAAO,EAAElB,MAAM,GAAG,CAAC,CAAC,KAAKhB,GAAG,CAACiB,GAAG,CAAC,aAAaiB,OAAO,EAAE,EAAE;IAAElB;EAAO,CAAC,CAAC;EACnFf,MAAM,EAAGS,IAAI,IAAKV,GAAG,CAACsB,IAAI,CAAC,WAAW,EAAEZ,IAAI,CAAC;EAC7Cc,IAAI,EAAGL,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,aAAaN,EAAE,OAAO,CAAC;EAC7CO,OAAO,EAAGP,EAAE,IAAKnB,GAAG,CAACyB,GAAG,CAAC,aAAaN,EAAE,UAAU,CAAC;EACnDQ,MAAM,EAAGR,EAAE,IAAKnB,GAAG,CAAC2B,MAAM,CAAC,aAAaR,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMgB,WAAW,GAAGA,CAAA,KAAMnC,GAAG,CAACiB,GAAG,CAAC,SAAS,CAAC;AAEnD,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}